version: '3.8'

services:
  # PostgreSQL Database
  database:
    image: postgres:16-alpine
    container_name: sunrise_database
    environment:
      POSTGRES_DB: sunrise_sunset_production
      POSTGRES_USER: sunrise_app
      POSTGRES_PASSWORD: secure_password_123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sunrise_app -d sunrise_sunset_production"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - sunrise_network

  # Rails Backend API
  backend:
    build:
      context: ./sunrise_sunset_backend
      dockerfile: Dockerfile
    container_name: sunrise_backend
    depends_on:
      database:
        condition: service_healthy
    environment:
      RAILS_ENV: production
      DATABASE_URL: postgresql://sunrise_app:secure_password_123@database:5432/sunrise_sunset_production
      SECRET_KEY_BASE: your_secret_key_base_change_this_in_production
      SUNRISE_API_BASE_URL: https://api.sunrise-sunset.org
      GEOCODING_API_BASE_URL: https://nominatim.openstreetmap.org
      CORS_ALLOWED_ORIGINS: http://localhost:3001,http://localhost
    ports:
      - "3000:3000"
    volumes:
      - ./sunrise_sunset_backend:/app
      - bundle_cache:/usr/local/bundle
    command: >
      sh -c "bundle exec rails db:create db:migrate &&
             bundle exec rails server -b 0.0.0.0"
    networks:
      - sunrise_network

  # React Frontend
  frontend:
    build:
      context: ./sunrise_sunset_frontend
      dockerfile: Dockerfile
    container_name: sunrise_frontend
    depends_on:
      - backend
    environment:
      VITE_API_BASE_URL: http://localhost:3000
    ports:
      - "80:80"
      - "3001:80"
    networks:
      - sunrise_network

volumes:
  postgres_data:
    driver: local
  bundle_cache:
    driver: local

networks:
  sunrise_network:
    driver: bridge